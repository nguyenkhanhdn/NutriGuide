// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NutriGuide.Models;

#nullable disable

namespace NutriGuide.Migrations
{
    [DbContext(typeof(NutriGuideDbContext))]
    partial class NutriGuideDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NutriGuide.Models.Bmi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Age");

                    b.Property<float>("FenaleBmi")
                        .HasColumnType("real");

                    b.Property<float>("MaleBmi")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Bmis");
                });

            modelBuilder.Entity("NutriGuide.Models.FoodRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateConsumed")
                        .HasColumnType("datetime2");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("GlycemicIndex")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FoodRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateConsumed = new DateTime(2025, 3, 17, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2328),
                            FoodName = "Bánh mì",
                            GlycemicIndex = 51f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            DateConsumed = new DateTime(2025, 3, 16, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2337),
                            FoodName = "Táo",
                            GlycemicIndex = 52f,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            DateConsumed = new DateTime(2025, 3, 15, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2343),
                            FoodName = "Chuối",
                            GlycemicIndex = 53f,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            DateConsumed = new DateTime(2025, 3, 14, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2350),
                            FoodName = "Rau xanh",
                            GlycemicIndex = 54f,
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            DateConsumed = new DateTime(2025, 3, 13, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2356),
                            FoodName = "Thịt bò",
                            GlycemicIndex = 55f,
                            UserId = 6
                        },
                        new
                        {
                            Id = 6,
                            DateConsumed = new DateTime(2025, 3, 12, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2362),
                            FoodName = "Cá hồi",
                            GlycemicIndex = 56f,
                            UserId = 7
                        },
                        new
                        {
                            Id = 7,
                            DateConsumed = new DateTime(2025, 3, 11, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2369),
                            FoodName = "Sữa chua",
                            GlycemicIndex = 57f,
                            UserId = 8
                        },
                        new
                        {
                            Id = 8,
                            DateConsumed = new DateTime(2025, 3, 10, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2375),
                            FoodName = "Trứng",
                            GlycemicIndex = 58f,
                            UserId = 9
                        },
                        new
                        {
                            Id = 9,
                            DateConsumed = new DateTime(2025, 3, 9, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2381),
                            FoodName = "Dưa hấu",
                            GlycemicIndex = 59f,
                            UserId = 10
                        },
                        new
                        {
                            Id = 10,
                            DateConsumed = new DateTime(2025, 3, 8, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2388),
                            FoodName = "Cơm trắng",
                            GlycemicIndex = 60f,
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            DateConsumed = new DateTime(2025, 3, 7, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2394),
                            FoodName = "Bánh mì",
                            GlycemicIndex = 61f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            DateConsumed = new DateTime(2025, 3, 6, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2400),
                            FoodName = "Táo",
                            GlycemicIndex = 62f,
                            UserId = 3
                        },
                        new
                        {
                            Id = 13,
                            DateConsumed = new DateTime(2025, 3, 5, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2406),
                            FoodName = "Chuối",
                            GlycemicIndex = 63f,
                            UserId = 4
                        },
                        new
                        {
                            Id = 14,
                            DateConsumed = new DateTime(2025, 3, 4, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2412),
                            FoodName = "Rau xanh",
                            GlycemicIndex = 64f,
                            UserId = 5
                        },
                        new
                        {
                            Id = 15,
                            DateConsumed = new DateTime(2025, 3, 3, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2418),
                            FoodName = "Thịt bò",
                            GlycemicIndex = 65f,
                            UserId = 6
                        });
                });

            modelBuilder.Entity("NutriGuide.Models.HealthRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("BloodSugar")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateRecorded")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiastolicPressure")
                        .HasColumnType("int");

                    b.Property<int>("SystolicPressure")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HealthRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BloodSugar = 91f,
                            DateRecorded = new DateTime(2025, 3, 17, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2171),
                            DiastolicPressure = 81,
                            SystolicPressure = 121,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BloodSugar = 92f,
                            DateRecorded = new DateTime(2025, 3, 16, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2187),
                            DiastolicPressure = 82,
                            SystolicPressure = 122,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BloodSugar = 93f,
                            DateRecorded = new DateTime(2025, 3, 15, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2196),
                            DiastolicPressure = 83,
                            SystolicPressure = 123,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BloodSugar = 94f,
                            DateRecorded = new DateTime(2025, 3, 14, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2204),
                            DiastolicPressure = 84,
                            SystolicPressure = 124,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            BloodSugar = 95f,
                            DateRecorded = new DateTime(2025, 3, 13, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2212),
                            DiastolicPressure = 80,
                            SystolicPressure = 125,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            BloodSugar = 96f,
                            DateRecorded = new DateTime(2025, 3, 12, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2220),
                            DiastolicPressure = 81,
                            SystolicPressure = 126,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            BloodSugar = 97f,
                            DateRecorded = new DateTime(2025, 3, 11, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2227),
                            DiastolicPressure = 82,
                            SystolicPressure = 127,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            BloodSugar = 98f,
                            DateRecorded = new DateTime(2025, 3, 10, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2235),
                            DiastolicPressure = 83,
                            SystolicPressure = 128,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            BloodSugar = 99f,
                            DateRecorded = new DateTime(2025, 3, 9, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2269),
                            DiastolicPressure = 84,
                            SystolicPressure = 129,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            BloodSugar = 100f,
                            DateRecorded = new DateTime(2025, 3, 8, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2278),
                            DiastolicPressure = 80,
                            SystolicPressure = 120,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            BloodSugar = 101f,
                            DateRecorded = new DateTime(2025, 3, 7, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2286),
                            DiastolicPressure = 81,
                            SystolicPressure = 121,
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            BloodSugar = 102f,
                            DateRecorded = new DateTime(2025, 3, 6, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2294),
                            DiastolicPressure = 82,
                            SystolicPressure = 122,
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            BloodSugar = 103f,
                            DateRecorded = new DateTime(2025, 3, 5, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2302),
                            DiastolicPressure = 83,
                            SystolicPressure = 123,
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            BloodSugar = 104f,
                            DateRecorded = new DateTime(2025, 3, 4, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2310),
                            DiastolicPressure = 84,
                            SystolicPressure = 124,
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            BloodSugar = 105f,
                            DateRecorded = new DateTime(2025, 3, 3, 13, 4, 23, 819, DateTimeKind.Utc).AddTicks(2317),
                            DiastolicPressure = 80,
                            SystolicPressure = 125,
                            UserId = 15
                        });
                });

            modelBuilder.Entity("NutriGuide.Models.NCUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1990, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyenvana@example.com",
                            FullName = "Nguyễn Văn A",
                            Gender = "Male"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1985, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tranthib@example.com",
                            FullName = "Trần Thị B",
                            Gender = "Female"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(2000, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "levanc@example.com",
                            FullName = "Lê Văn C",
                            Gender = "Male"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1995, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phamthid@example.com",
                            FullName = "Phạm Thị D",
                            Gender = "Female"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1992, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hoangvane@example.com",
                            FullName = "Hoàng Văn E",
                            Gender = "Male"
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1988, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dangthif@example.com",
                            FullName = "Đặng Thị F",
                            Gender = "Female"
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateTime(2002, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "buivang@example.com",
                            FullName = "Bùi Văn G",
                            Gender = "Male"
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = new DateTime(1997, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ngothih@example.com",
                            FullName = "Ngô Thị H",
                            Gender = "Female"
                        },
                        new
                        {
                            Id = 9,
                            DateOfBirth = new DateTime(1991, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "duongvani@example.com",
                            FullName = "Dương Văn I",
                            Gender = "Male"
                        },
                        new
                        {
                            Id = 10,
                            DateOfBirth = new DateTime(1999, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tothij@example.com",
                            FullName = "Tô Thị J",
                            Gender = "Female"
                        },
                        new
                        {
                            Id = 11,
                            DateOfBirth = new DateTime(1986, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "luongvank@example.com",
                            FullName = "Lương Văn K",
                            Gender = "Male"
                        },
                        new
                        {
                            Id = 12,
                            DateOfBirth = new DateTime(1994, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maithil@example.com",
                            FullName = "Mai Thị L",
                            Gender = "Female"
                        },
                        new
                        {
                            Id = 13,
                            DateOfBirth = new DateTime(2001, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vuvan@example.com",
                            FullName = "Vũ Văn M",
                            Gender = "Male"
                        },
                        new
                        {
                            Id = 14,
                            DateOfBirth = new DateTime(1987, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lythin@example.com",
                            FullName = "Lý Thị N",
                            Gender = "Female"
                        },
                        new
                        {
                            Id = 15,
                            DateOfBirth = new DateTime(1993, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "trinhvano@example.com",
                            FullName = "Trịnh Văn O",
                            Gender = "Male"
                        });
                });

            modelBuilder.Entity("NutriGuide.Models.Nutri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amount2Eat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Food2Eat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nutrient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symptom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nutris");
                });

            modelBuilder.Entity("NutriGuide.Models.Standard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Standards");
                });

            modelBuilder.Entity("NutriGuide.Models.FoodRecord", b =>
                {
                    b.HasOne("NutriGuide.Models.NCUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NutriGuide.Models.HealthRecord", b =>
                {
                    b.HasOne("NutriGuide.Models.NCUser", "User")
                        .WithMany("HealthRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NutriGuide.Models.NCUser", b =>
                {
                    b.Navigation("HealthRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
